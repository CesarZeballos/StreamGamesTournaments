// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  organizer
  user
}

enum Categories {
  amateur
  professional
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique @db.VarChar(80)
  nickName    String      @unique
  password    String
  birthDate   DateTime
  role        Role        @default(user)
  urlSelfie   String
  actived     Boolean     @default(true)
  createdAt   DateTime    @default(now())
  tournaments Tournament? // uno a uno
  team        Teams       @relation(fields: [teamId], references: [id]) // muchos a uno
  teamId      String
}

model Tournament {
  id          String     @id @default(uuid())
  startDate   DateTime
  createdAt   DateTime   @default(now())
  categories  Categories
  award       Int
  urlStream   String
  organizer   User       @relation(fields: [organizerId], references: [id]) // uno a uno
  organizerId String     @unique
  game        Games      @relation(fields: [gameId], references: [id]) // uno a uno
  gameId      String     @unique
  teams       Teams[]    // uno a muchos
}

model Teams {
  id           String     @id @default(uuid())
  name         String     @unique @db.VarChar(25)
  createdAt    DateTime   @default(now())
  urlAvatar    String
  tournament   Tournament @relation(fields: [tournamentId], references: [id]) // muchos a uno
  tournamentId String
  user         User[]     // uno a muchos
}

model Games {
  id         String      @id @default(uuid())
  name       String      @db.VarChar(80)
  tournament Tournament?
}
